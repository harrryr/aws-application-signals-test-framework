# The EC2 AMI for K8s needs to be updated to prevent it from becoming outdated. This workflow will run in the beginning of every month to replace the existing
# instances with new ones
name: Update K8s EC2 Instance

on:
  workflow_call:
    env:
      repo:
        required: true
        type: string
      ec2_name:
        required: true
        type: string
      language:
        required: true
        type: string      
      
permissions:
  id-token: write
  contents: read

env:
  REPO: ${{ inputs.repo }}
  EC2_NAME: ${{ inputs.ec2_name }}
  LANGUAGE:  ${{ inputs.language }}
  E2E_TEST_AWS_REGION: us-east-1
  E2E_TEST_ACCOUNT_ID: ${{ secrets.APPLICATION_SIGNALS_E2E_TEST_ACCOUNT_ID }}
  E2E_TEST_ROLE_NAME: ${{ secrets.APPLICATION_SIGNALS_E2E_TEST_ROLE_NAME }}

jobs:
  create-k8s-on-ec2:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Testing ID
        run: |
          echo TESTING_ID="${{ github.run_id }}-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.E2E_TEST_ACCOUNT_ID }}:role/${{ env.E2E_TEST_ROLE_NAME }}
          aws-region: us-east-1

      - name: Create New K8s on EC2
        working-directory: .github/workflows/util
        run: |
          ./setup-k8s.sh ${{ env.TESTING_ID }} ${{ env.EC2_NAME }}-${{ env.LANGUAGE }} ${{ env.E2E_TEST_AWS_REGION }}

      - name: Check if Secret Key Already Exist and If Not Create New Ones
        run: |
          SECRET_NAMES=(
            "e2e-test/${{ env.REPO }}/${{ env.LANGUAGE }}-k8s-master-node-endpoint-temporary-update"
            "e2e-test/${{ env.REPO }}/${{ env.LANGUAGE }}-k8s-ssh-key-temporary-update"
          )
          
          for SECRET_NAME in "${SECRET_NAMES[@]}"; do
            echo "Checking secret: $SECRET_NAME"
          
        
            if aws secretsmanager describe-secret --secret-id $SECRET_NAME; then
              echo "Success: The secret exists."
            else
              echo "Secret does not exist. Creating new secret"
              aws secretsmanager create-secret --name $SECRET_NAME --secret-string " "
            fi
          done
      

      - name: Save Private Key and Master Public Endpoint to Secret Manager
        working-directory: .github/workflows/util
        run: |
          SECRET_NAMES=(
            "e2e-test/${{ env.REPO }}/${{ env.LANGUAGE }}-k8s-master-node-endpoint-temporary-update"
            "e2e-test/${{ env.REPO }}/${{ env.LANGUAGE }}-k8s-ssh-key-temporary-update"
          )
          
          ls
          private_key_file=k8s-on-ec2-test-key-pair-test.pem
          private_key_file=k8s-on-ec2-${{ env.EC2_NAME }}-${{ env.LANGUAGE }}-key-pair-${{ env.TESTING_ID }}.pem
          private_key_content=$(<"$private_key_file")
          
          master_public_ip=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=k8s-on-ec2-${{ env.EC2_NAME }}-${{ env.LANGUAGE }}-master-${{ env.TESTING_ID }}" "Name=instance-state-name,Values=running" \
            --query "Reservations[*].Instances[*].PublicIpAddress" \
            --output text)
          
          echo $master_public_ip
          
          aws secretsmanager update-secret --secret-id "${SECRET_NAMES[0]}" --secret-string $master_public_ip
          echo "Done"
          echo $private_key_content
          aws secretsmanager update-secret --secret-id "${SECRET_NAMES[1]}" --secret-string "$private_key_content"
  
  

      - name: Run Java K8s Test
        uses: ./.github/workflows/python-k8s-e2e-test.yml
        with:
          # To run in more regions, a cluster must be provisioned manually on EC2 instances in that region
          aws-region: 'us-east-1'
          caller-workflow-name: 'appsignals-e2e-python-k8s-canary-test'

      - name: Check if Secret Key Already Exist and If Not Create New Ones
        run: |
          SECRET_NAMES=(
            "e2e-test/${{ env.REPO }}/${{ env.LANGUAGE }}-k8s-master-node-endpoint"
            "e2e-test/${{ env.REPO }}/${{ env.LANGUAGE }}-k8s-ssh-key"
          )

          for SECRET_NAME in "${SECRET_NAMES[@]}"; do
            echo "Checking secret: $SECRET_NAME"

            secret_exists=$(aws secretsmanager describe-secret --secret-id $SECRET_NAME --query 'ARN' --output text 2>/dev/null)

            if [ -z "$secret_exists" ]; then
              echo "Secret does not exist. Creating new secret"
              aws secretsmanager create-secret --name $SECRET_NAME --secret-string ""
            fi
          done

      - name: Save Private Key and Master Public Endpoint to Secret Manager
        working-directory: .github/workflows/util
        run: |
          SECRET_NAMES=(
            "e2e-test/${{ env.REPO }}/${{ env.LANGUAGE }}-k8s-master-node-endpoint"
            "e2e-test/${{ env.REPO }}/${{ env.LANGUAGE }}-k8s-ssh-key"
          )

          private_key_file=k8s-on-ec2-${{ env.EC2_NAME }}-key-pair-${{ env.TESTING_ID }}.pem

          master_public_ip=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=$MASTER_INSTANCE_NAME" "Name=instance-state-name,Values=running" \
            --query "Reservations[*].Instances[*].PublicIpAddress" \
            --output text)

          aws secretsmanager update-secret --secret-id "${SECRET_NAMES[0]}" --secret-string file://$private_key_file
          aws secretsmanager update-secret --secret-id "${SECRET_NAMES[1]}" --secret-string file://$master_public_ip


